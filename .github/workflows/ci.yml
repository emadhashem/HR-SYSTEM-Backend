name: CI Pipeline - Build and Test (NestJS)

on:
  push:
    branches:
      - master # Trigger on push to the master branch
  pull_request:
    branches:
      - master # Trigger on pull requests to the master branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js 16
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22' # Specify Node.js 16
          cache: 'yarn' # Cache Yarn dependencies

      # Step 3: Install Yarn globally (if not already installed)
      - name: Install Yarn
        run: npm install -g yarn

      # Step 4: Install dependencies using Yarn
      - name: Install dependencies
        run: yarn install

      # Step 5: Print secrets (for debugging)
      - name: Print secrets
        run: |
          echo "DATABASE_URL: ${{ secrets.DATABASE_URL }}"
          echo "PORT: ${{ secrets.PORT }}"

      # Step 6: Build the NestJS project
      - name: Build
        run: yarn build

      # Step 7: Run tests
      - name: Run tests
        run: yarn test

  dockerize:
    runs-on: ubuntu-latest
    needs: build-and-test  # Ensure this job runs after build-and-test
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Build the Docker image
      - name: Build Docker image
        run: docker build -t hr-system .

      # Step 3: Run the Docker container and test it
      - name: Run Docker container
        run: |
          docker run -d --name hr-system -p 4000:4000 \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            hr-system
          sleep 10  # Wait for the app to start
          curl -v http://localhost:4000  # Test the app